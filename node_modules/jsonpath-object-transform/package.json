{
  "_args": [
    [
      {
        "raw": "https://github.com/dvdln/jsonpath-object-transform",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/dvdln/jsonpath-object-transform",
        "spec": "git+https://github.com/dvdln/jsonpath-object-transform.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:dvdln/jsonpath-object-transform.git",
          "sshUrl": "git+ssh://git@github.com/dvdln/jsonpath-object-transform.git",
          "httpsUrl": "git+https://github.com/dvdln/jsonpath-object-transform.git",
          "gitUrl": "git://github.com/dvdln/jsonpath-object-transform.git",
          "shortcut": "github:dvdln/jsonpath-object-transform",
          "directUrl": "https://raw.githubusercontent.com/dvdln/jsonpath-object-transform/master/package.json"
        }
      },
      "/Users/sam/git/hookforce"
    ]
  ],
  "_from": "git+https://github.com/dvdln/jsonpath-object-transform.git",
  "_id": "jsonpath-object-transform@1.0.4",
  "_inCache": true,
  "_location": "/jsonpath-object-transform",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/dvdln/jsonpath-object-transform",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/dvdln/jsonpath-object-transform",
    "spec": "git+https://github.com/dvdln/jsonpath-object-transform.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:dvdln/jsonpath-object-transform.git",
      "sshUrl": "git+ssh://git@github.com/dvdln/jsonpath-object-transform.git",
      "httpsUrl": "git+https://github.com/dvdln/jsonpath-object-transform.git",
      "gitUrl": "git://github.com/dvdln/jsonpath-object-transform.git",
      "shortcut": "github:dvdln/jsonpath-object-transform",
      "directUrl": "https://raw.githubusercontent.com/dvdln/jsonpath-object-transform/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/dvdln/jsonpath-object-transform.git#e33f4f143976db3c2a52439ff42a5e1982e2defe",
  "_shasum": "8a3b29ca5c2b7a4663d8c1e6ef7fea4e42320933",
  "_shrinkwrap": null,
  "_spec": "https://github.com/dvdln/jsonpath-object-transform",
  "_where": "/Users/sam/git/hookforce",
  "author": {
    "name": "David Lane",
    "email": "me@dvdln.com"
  },
  "bugs": {
    "url": "https://github.com/dvdln/jsonpath-object-transform/issues"
  },
  "dependencies": {
    "JSONPath": "^0.10.0"
  },
  "description": "Transform an object literal using JSONPath.",
  "devDependencies": {
    "bower": "^1.3.1"
  },
  "gitHead": "e33f4f143976db3c2a52439ff42a5e1982e2defe",
  "homepage": "https://github.com/dvdln/jsonpath-object-transform#readme",
  "keywords": [
    "jsonpath",
    "json",
    "path",
    "object",
    "translate",
    "format",
    "transform",
    "remap",
    "map"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "jsonpath-object-transform",
  "optionalDependencies": {},
  "readme": "# jsonpath-object-transform\n> Transform an object literal using JSONPath.\n\n[![npm](https://badge.fury.io/js/jsonpath-object-transform.png)](http://badge.fury.io/js/jsonpath-object-transform)\n\nPulls data from an object literal using JSONPath and generate a new objects based on a template. Each of the template's properties can pull a single property from the source data or an array of all results found by its JSONPath. When pulling an array of data you can also supply a subtemplate to transform each item in the array.\n\nJSONPath is like XPath for JavaScript objects. To learn the syntax, read the documentation for the [JSONPath](https://www.npmjs.org/package/JSONPath) package on npm and the [original article](http://goessner.net/articles/JsonPath/) by Stefan Goessner.\n\n## Usage\n```js\nvar transform = require('jsonpath-object-transform');\n\nvar template = {\n  foo: ['$.some.crazy', {\n    bar: '$.example'\n  }]\n};\n\nvar data = {\n  some: {\n    crazy: [\n      {\n        example: 'A'\n      },\n      {\n        example: 'B'\n      }\n    ]\n  }\n};\n\nvar result = transform(data, template);\n```\nResult:\n```js\n{\n  foo: [\n    {\n      bar: 'A'\n    },\n    {\n      bar: 'B'\n    }\n  ]\n}\n```\n\n## Method\n```js\njsonPathObjectTransform(data, template);\n```\nWhere `data` and `template` are both a plain `Object`. Returns the transformed `Object`.\n\n## Template Objects\nYour template will be an object literal that outlines what the resulting object should look like. Each property will contain a JSONPath `String` or `Array` depending on how many properties from the source data you want to assign to the generated object.\n\n### Pulling a Single Property\n```js\n{ destination: '$.path.to.source' }\n```\nUse a `String` on your template property to assign a single object returned from your JSONPath. If your path returns multiple results then only the first is used.\n\n#### Example\n```js\nvar template = {\n  foo: '$.example'\n};\n\nvar data = {\n  example: 'bar'\n};\n```\nResult:\n```js\n{\n  foo: 'bar'\n}\n```\n\n### Pulling an Array of Properties\n```js\n{ destination: ['$.path.to.sources'] }\n```\nUse an `Array` containing a single `String` to assign all results returned from your JSONPath.\n\n#### Example\n```js\nvar template = {\n  foo: ['$..example']\n};\n\nvar data = {\n  a: {\n    example: 'bar'\n  },\n  b: {\n    example: 'baz'\n  }\n};\n```\nResult:\n```js\n{\n  foo: ['bar', 'baz']\n}\n```\n\n### Transform Items Returned in Array\n```js\n{ destination: ['$.path.to.sources', { item: '$.item.path' }] }\n```\nUse an `Array` with a `String` and an `Object` to assign all results returned from your JSONPath and transform each of the objects with a subtemplate.\n\n#### Example\n```js\nvar template = {\n  foo: [$..example, {\n    bar: '$.demo'\n  }]\n};\n\nvar data = {\n  a: {\n    example: {\n      demo: 'baz'\n    }\n  },\n  b: {\n    example: {\n      demo: 'qux'\n    }\n  }\n};\n```\nResult:\n```js\n{\n  foo: [\n    { bar: 'baz' },\n    { bar: 'qux' }\n  ]\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dvdln/jsonpath-object-transform.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.4"
}
